The finite volume scheme derived in the previous section (@update) exhibits a high degree of _data parallelism_ or _fine-grained parallelism_. The *same operation* of updating hydraulic variables is performed on *multiple data*. Additionally, fluxes must be computed at each interface, and source terms evaluated for each cell, all of which are repeated at every time step. Given @CFL, these time steps can be very small and beyond our control. \
Therefore, the main limitations of an implementation of this scheme are the mesh size, defined by the number of cells and interfaces, and the desired simulation time. This inherent data parallelism guides our efforts to accelerate Watlab. One approach is to distribute computations across multiple processors, known as _parallelization_. This also motivates the use of coprocessors such as Graphics Processing Units (GPUs), which execute instructions simultaneously across many processors. Finally, since computations access different data while some cells share edges, optimizing data access patterns is essential.